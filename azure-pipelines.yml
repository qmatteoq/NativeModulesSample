# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

# pool: Default
pool:
    vmImage: 'windows-latest'

variables:
  solution: 'windows/NativeModulesSample.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

name: $(date:yyyy).$(Month)$(rev:.r).0

steps:

- task: DownloadSecureFile@1
  name: 'vsEnterprise'
  inputs:
    secureFile: 'vs_Enterprise.exe'

# - script: '$(vsEnterprise.secureFilePath) modify --add Microsoft.VisualStudio.ComponentGroup.UWP.VC.v141.BuildTools --add Microsoft.VisualStudio.Component.VC.v141.x86.x64 --installPath "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\" --quiet --norestart'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $startInfo = New-Object System.Diagnostics.ProcessStartInfo
        $startInfo.FileName = $(vsEnterprise.secureFilePath)
        $startInfo.Arguments = "modify --add Microsoft.VisualStudio.ComponentGroup.UWP.VC.v141.BuildTools --add Microsoft.VisualStudio.Component.VC.v141.x86.x64 --installPath "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\" --quiet --norestart"
        $process = New-Object System.Diagnostics.Process
        $process.StartInfo = $startInfo
        $process.Start()
        $process.WaitForExit()


- task: VersionAPPX@2
  displayName: 'Version MSIX'
  inputs:
    Path: '$(Build.SourcesDirectory)'
    VersionNumber: '$(Build.BuildNumber)'
    InjectVersion: true

- script: 'yarn install'

- script: 'yarn global add react-native-cli'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: 'windows/*.sln'
    feedsToUse: 'select'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Never /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=false'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(appxPackageDir)'
    ArtifactName: 'drop'
